{"mappings":"YAAA,IAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAE3B,SAA2BC,GACzBA,EAAEC,iBACF,IAAMC,EAAQC,OAAOX,EAAKC,MAAMW,OAC1BR,EAAOO,OAAOX,EAAKI,KAAKQ,QAehC,SAA8BC,GAC5B,IAAMC,EAAkB,GACxB,IAAKC,EAAI,EAAGA,GAAKF,EAAGE,GAAK,EACvBD,EAAgBE,KAAKD,GAEvB,OAAOD,C,EAlBPG,CADeN,OAAOX,EAAKK,OAAOO,QACLM,QAAO,SAACjB,EAAOkB,GAQ1C,OAaJ,SAAuBA,EAAUlB,GAC/B,OAAO,IAAImB,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCC,YAAW,W,OAAMJ,EAAQ,CAAEF,WAAUlB,S,GAAUA,GAE/CwB,YAAW,W,OAAMH,EAAO,CAAEH,WAAUlB,S,GAAUA,E,IA3BhDyB,CAAcP,EAAUlB,GACrB0B,MAAK,SAAAC,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAAL3B,MACjB8B,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAAL3B,MAClB8B,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAEnD7B,EAASG,C,GAChBM,GACHF,EAAE2B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', formSubmitHandler);\n\nfunction formSubmitHandler(e) {\n  e.preventDefault();\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n  getPromisesPositions(amount).reduce((delay, position) => {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    return (delay += step);\n  }, delay);\n  e.currentTarget.reset();\n}\n\nfunction getPromisesPositions(n) {\n  const promisesNumbers = [];\n  for (i = 1; i <= n; i += 1) {\n    promisesNumbers.push(i);\n  }\n  return promisesNumbers;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      setTimeout(() => resolve({ position, delay }), delay);\n    } else {\n      setTimeout(() => reject({ position, delay }), delay);\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","addEventListener","e","preventDefault","delay1","Number","value","n","promisesNumbers","i","push","$ce04d3a99e08e73b$var$getPromisesPositions","reduce","position","Promise","resolve","reject","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","console","log","concat","catch","currentTarget","reset"],"version":3,"file":"03-promises.0c210655.js.map"}